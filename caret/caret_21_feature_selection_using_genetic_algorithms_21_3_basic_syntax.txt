caret_21_feature_selection_using_genetic_algorithms
21 Feature Selection using Genetic Algorithms
feature-selection-using-genetic-algorithms.html
 21.3 Basic Syntax The most basic usage of the function is: where x : a data frame or matrix of predictor values y : a factor or numeric vector of outcomes iters : the number of generations for the GA This isn’t very specific. All of the action is in the control function. That can be used to specify the model to be fit, how predictions are made and summarized as well as the genetic operations. Suppose that we want to fit a linear regression model. To do this, we can use train as an interface and pass arguments to that function through gafs : Other options, such as preProcess , can be passed in as well. Some important options to gafsControl are: method , number , repeats , index , indexOut , etc: options similar to those for train top control resampling. metric : this is similar to train ’s option but, in this case, the value should be a named vector with values for the internal and external metrics. If none are specified, the first value returned by the summary functions (see details below) are used and a warning is issued. A similar two-element vector for the option maximize is also required. See the last example here for an illustration. holdout : this is a number between [0, 1) that can be used to hold out samples for computing the internal fitness value. Note that this is independent of the external resampling step. Suppose 10-fold CV is being used. Within a resampling iteration, holdout can be used to sample an additional proportion of the 90% resampled data to use for estimating fitness. This may not be a good idea unless you have a very large training set and want to avoid an internal resampling procedure to estimate fitness. allowParallel and genParallel : these are logicals to control where parallel processing should be used (if at all). The former will parallelize the external resampling while the latter parallelizes the fitness calculations within a generation. allowParallel will almost always be more advantageous. There are a few built-in sets of functions to use with gafs : caretGA , rfGA , and treebagGA . The first is a simple interface to train . When using this, as shown above, arguments can be passed to train using the ... structure and the resampling estimates of performance can be used as the internal fitness value. The functions provided by rfGA and treebagGA avoid using train and their internal estimates of fitness come from using the out-of-bag estimates generated from the model. The GA implementation in caret uses the underlying code from the GA package ( Scrucca, 2013 ). 