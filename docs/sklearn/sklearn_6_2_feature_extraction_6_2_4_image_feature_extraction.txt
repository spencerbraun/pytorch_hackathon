sklearn_6_2_feature_extraction
6.2. Feature extraction
modules/feature_extraction.html
 6.2.4. Image feature extraction  6.2.4.1. Patch extraction  The extract_patches_2d function extracts patches from an image stored as a two-dimensional array, or three-dimensional with color information along the third axis. For rebuilding an image from all its patches, use reconstruct_from_patches_2d . For example let use generate a 4x4 pixel picture with 3 color channels (e.g. in RGB format): Let us now try to reconstruct the original image from the patches by averaging on overlapping areas: The PatchExtractor class works in the same way as extract_patches_2d , only it supports multiple images as input. It is implemented as an estimator, so it can be used in pipelines. See: 6.2.4.2. Connectivity graph of an image  Several estimators in the scikit-learn can use connectivity information between features or samples. For instance Ward clustering ( Hierarchical clustering ) can cluster together only neighboring pixels of an image, thus forming contiguous patches: For this purpose, the estimators use a ‘connectivity’ matrix, giving which samples are connected. The function img_to_graph returns such a matrix from a 2D or 3D image. Similarly, grid_to_graph build a connectivity matrix for images given the shape of these image. These matrices can be used to impose connectivity in estimators that use connectivity information, such as Ward clustering ( Hierarchical clustering ), but also to build precomputed kernels, or similarity matrices. Note Examples A demo of structured Ward hierarchical clustering on an image of coins Spectral clustering for image segmentation Feature agglomeration vs. univariate selection 