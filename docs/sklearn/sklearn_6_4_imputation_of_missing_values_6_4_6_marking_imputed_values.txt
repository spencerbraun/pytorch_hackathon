sklearn_6_4_imputation_of_missing_values
6.4. Imputation of missing values
modules/impute.html
 6.4.6. Marking imputed values  The MissingIndicator transformer is useful to transform a dataset into corresponding binary matrix indicating the presence of missing values in the dataset. This transformation is useful in conjunction with imputation. When using imputation, preserving the information about which values had been missing can be informative. Note that both the SimpleImputer and IterativeImputer have the boolean parameter ( by default) which when set to provides a convenient way of stacking the output of the MissingIndicator transformer with the output of the imputer. is usually used as the placeholder for missing values. However, it enforces the data type to be float. The parameter allows to specify other placeholder such as integer. In the following example, we will use as missing values: The parameter is used to choose the features for which the mask is constructed. By default, it is which returns the imputer mask of the features containing missing values at time: The parameter can be set to to return all features whether or not they contain missing values: When using the MissingIndicator in a Pipeline , be sure to use the FeatureUnion or ColumnTransformer to add the indicator features to the regular features. First we obtain the dataset, and add some missing values to it. Now we create a FeatureUnion . All features will be imputed using SimpleImputer , in order to enable classifiers to work with this data. Additionally, it adds the the indicator variables from MissingIndicator . Of course, we cannot use the transformer to make any predictions. We should wrap this in a Pipeline with a classifier (e.g., a DecisionTreeClassifier ) to be able to make predictions. 