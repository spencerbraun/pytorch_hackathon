sklearn_2_3_clustering
2.3. Clustering
modules/clustering.html
 2.3.10. Clustering performance evaluation  Evaluating the performance of a clustering algorithm is not as trivial as counting the number of errors or the precision and recall of a supervised classification algorithm. In particular any evaluation metric should not take the absolute values of the cluster labels into account but rather if this clustering define separations of the data similar to some ground truth set of classes or satisfying some assumption such that members belong to the same class are more similar than members of different classes according to some similarity metric. 2.3.10.1. Adjusted Rand index  Given the knowledge of the ground truth class assignments and our clustering algorithm assignments of the same samples , the adjusted Rand index is a function that measures the similarity of the two assignments, ignoring permutations and with chance normalization : One can permute 0 and 1 in the predicted labels, rename 2 to 3, and get the same score: Furthermore, adjusted_rand_score is symmetric : swapping the argument does not change the score. It can thus be used as a consensus measure : Perfect labeling is scored 1.0: Bad (e.g. independent labelings) have negative or close to 0.0 scores: 2.3.10.1.1. Advantages  Random (uniform) label assignments have a ARI score close to 0.0 for any value of and (which is not the case for raw Rand index or the V-measure for instance). Bounded range [-1, 1] : negative values are bad (independent labelings), similar clusterings have a positive ARI, 1.0 is the perfect match score. No assumption is made on the cluster structure : can be used to compare clustering algorithms such as k-means which assumes isotropic blob shapes with results of spectral clustering algorithms which can find cluster with “folded” shapes. 2.3.10.1.2. Drawbacks  Contrary to inertia, ARI requires knowledge of the ground truth classes while is almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting). However ARI can also be useful in a purely unsupervised setting as a building block for a Consensus Index that can be used for clustering model selection (TODO). Examples: Adjustment for chance in clustering performance evaluation : Analysis of the impact of the dataset size on the value of clustering measures for random assignments. 2.3.10.1.3. Mathematical formulation  If C is a ground truth class assignment and K the clustering, let us define and as: , the number of pairs of elements that are in the same set in C and in the same set in K , the number of pairs of elements that are in different sets in C and in different sets in K The raw (unadjusted) Rand index is then given by: \[\text{RI}  \frac{a + b}{C_2^{n_{samples}}}\] Where is the total number of possible pairs in the dataset (without ordering). However the RI score does not guarantee that random label assignments will get a value close to zero (esp. if the number of clusters is in the same order of magnitude as the number of samples). To counter this effect we can discount the expected RI of random labelings by defining the adjusted Rand index as follows: \[\text{ARI}  \frac{\text{RI} - E[\text{RI}]}{\max(\text{RI}) - E[\text{RI}]}\] References Comparing Partitions L. Hubert and P. Arabie, Journal of Classification 1985 Wikipedia entry for the adjusted Rand index 2.3.10.2. Mutual Information based scores  Given the knowledge of the ground truth class assignments and our clustering algorithm assignments of the same samples , the Mutual Information is a function that measures the agreement of the two assignments, ignoring permutations. Two different normalized versions of this measure are available, Normalized Mutual Information (NMI) and Adjusted Mutual Information (AMI) . NMI is often used in the literature, while AMI was proposed more recently and is normalized against chance : One can permute 0 and 1 in the predicted labels, rename 2 to 3 and get the same score: All, mutual_info_score , adjusted_mutual_info_score and normalized_mutual_info_score are symmetric: swapping the argument does not change the score. Thus they can be used as a consensus measure : Perfect labeling is scored 1.0: This is not true for , which is therefore harder to judge: Bad (e.g. independent labelings) have non-positive scores: 2.3.10.2.1. Advantages  Random (uniform) label assignments have a AMI score close to 0.0 for any value of and (which is not the case for raw Mutual Information or the V-measure for instance). Upper bound of 1 : Values close to zero indicate two label assignments that are largely independent, while values close to one indicate significant agreement. Further, an AMI of exactly 1 indicates that the two label assignments are equal (with or without permutation). 2.3.10.2.2. Drawbacks  Contrary to inertia, MI-based measures require the knowledge of the ground truth classes while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting). However MI-based measures can also be useful in purely unsupervised setting as a building block for a Consensus Index that can be used for clustering model selection. NMI and MI are not adjusted against chance. Examples: Adjustment for chance in clustering performance evaluation : Analysis of the impact of the dataset size on the value of clustering measures for random assignments. This example also includes the Adjusted Rand Index. 2.3.10.2.3. Mathematical formulation  Assume two label assignments (of the same N objects), and . Their entropy is the amount of uncertainty for a partition set, defined by: \[H(U)  - \sum_{i1}^{|U|}P(i)\log(P(i))\] where is the probability that an object picked at random from falls into class . Likewise for : \[H(V)  - \sum_{j1}^{|V|}P'(j)\log(P'(j))\] With . The mutual information (MI) between and is calculated by: \[\text{MI}(U, V)  \sum_{i1}^{|U|}\sum_{j1}^{|V|}P(i, j)\log\left(\frac{P(i,j)}{P(i)P'(j)}\right)\] where is the probability that an object picked at random falls into both classes and . It also can be expressed in set cardinality formulation: \[\text{MI}(U, V)  \sum_{i1}^{|U|} \sum_{j1}^{|V|} \frac{|U_i \cap V_j|}{N}\log\left(\frac{N|U_i \cap V_j|}{|U_i||V_j|}\right)\] The normalized mutual information is defined as \[\text{NMI}(U, V)  \frac{\text{MI}(U, V)}{\text{mean}(H(U), H(V))}\] This value of the mutual information and also the normalized variant is not adjusted for chance and will tend to increase as the number of different labels (clusters) increases, regardless of the actual amount of “mutual information” between the label assignments. The expected value for the mutual information can be calculated using the following equation [VEB2009] . In this equation, (the number of elements in ) and (the number of elements in ). \[E[\text{MI}(U,V)]\sum_{i1}^{|U|} \sum_{j1}^{|V|} \sum_{n_{ij}(a_i+b_j-N)^+ }^{\min(a_i, b_j)} \frac{n_{ij}}{N}\log \left( \frac{ N.n_{ij}}{a_i b_j}\right) \frac{a_i!b_j!(N-a_i)!(N-b_j)!}{N!n_{ij}!(a_i-n_{ij})!(b_j-n_{ij})! (N-a_i-b_j+n_{ij})!}\] Using the expected value, the adjusted mutual information can then be calculated using a similar form to that of the adjusted Rand index: \[\text{AMI}  \frac{\text{MI} - E[\text{MI}]}{\text{mean}(H(U), H(V)) - E[\text{MI}]}\] For normalized mutual information and adjusted mutual information, the normalizing value is typically some generalized mean of the entropies of each clustering. Various generalized means exist, and no firm rules exist for preferring one over the others. The decision is largely a field-by-field basis; for instance, in community detection, the arithmetic mean is most common. Each normalizing method provides “qualitatively similar behaviours” [YAT2016] . In our implementation, this is controlled by the parameter. Vinh et al. (2010) named variants of NMI and AMI by their averaging method [VEB2010] . Their ‘sqrt’ and ‘sum’ averages are the geometric and arithmetic means; we use these more broadly common names. References Strehl, Alexander, and Joydeep Ghosh (2002). “Cluster ensembles – a knowledge reuse framework for combining multiple partitions”. Journal of Machine Learning Research 3: 583–617. doi:10.1162/153244303321897735 . Wikipedia entry for the (normalized) Mutual Information Wikipedia entry for the Adjusted Mutual Information VEB2009 Vinh, Epps, and Bailey, (2009). “Information theoretic measures for clusterings comparison”. Proceedings of the 26th Annual International Conference on Machine Learning - ICML ‘09. doi:10.1145/1553374.1553511 . ISBN 9781605585161. VEB2010 Vinh, Epps, and Bailey, (2010). “Information Theoretic Measures for Clusterings Comparison: Variants, Properties, Normalization and Correction for Chance”. JMLR < http://jmlr.csail.mit.edu/papers/volume11/vinh10a/vinh10a.pdf > YAT2016 Yang, Algesheimer, and Tessone, (2016). “A comparative analysis of community detection algorithms on artificial networks”. Scientific Reports 6: 30750. doi:10.1038/srep30750 . 2.3.10.3. Homogeneity, completeness and V-measure  Given the knowledge of the ground truth class assignments of the samples, it is possible to define some intuitive metric using conditional entropy analysis. In particular Rosenberg and Hirschberg (2007) define the following two desirable objectives for any cluster assignment: homogeneity : each cluster contains only members of a single class. completeness : all members of a given class are assigned to the same cluster. We can turn those concept as scores homogeneity_score and completeness_score . Both are bounded below by 0.0 and above by 1.0 (higher is better): Their harmonic mean called V-measure is computed by v_measure_score : This function’s formula is as follows: \[v  \frac{(1 + \beta) \times \text{homogeneity} \times \text{completeness}}{(\beta \times \text{homogeneity} + \text{completeness})}\] defaults to a value of 1.0, but for using a value less than 1 for beta: more weight will be attributed to homogeneity, and using a value greater than 1: more weight will be attributed to completeness. The V-measure is actually equivalent to the mutual information (NMI) discussed above, with the aggregation function being the arithmetic mean [B2011] . Homogeneity, completeness and V-measure can be computed at once using homogeneity_completeness_v_measure as follows: The following clustering assignment is slightly better, since it is homogeneous but not complete: Note v_measure_score is symmetric : it can be used to evaluate the agreement of two independent assignments on the same dataset. This is not the case for completeness_score and homogeneity_score : both are bound by the relationship: 2.3.10.3.1. Advantages  Bounded scores : 0.0 is as bad as it can be, 1.0 is a perfect score. Intuitive interpretation: clustering with bad V-measure can be qualitatively analyzed in terms of homogeneity and completeness to better feel what ‘kind’ of mistakes is done by the assignment. No assumption is made on the cluster structure : can be used to compare clustering algorithms such as k-means which assumes isotropic blob shapes with results of spectral clustering algorithms which can find cluster with “folded” shapes. 2.3.10.3.2. Drawbacks  The previously introduced metrics are not normalized with regards to random labeling : this means that depending on the number of samples, clusters and ground truth classes, a completely random labeling will not always yield the same values for homogeneity, completeness and hence v-measure. In particular random labeling won’t yield zero scores especially when the number of clusters is large . This problem can safely be ignored when the number of samples is more than a thousand and the number of clusters is less than 10. For smaller sample sizes or larger number of clusters it is safer to use an adjusted index such as the Adjusted Rand Index (ARI) . These metrics require the knowledge of the ground truth classes while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting). Examples: Adjustment for chance in clustering performance evaluation : Analysis of the impact of the dataset size on the value of clustering measures for random assignments. 2.3.10.3.3. Mathematical formulation  Homogeneity and completeness scores are formally given by: \[h  1 - \frac{H(C|K)}{H(C)}\] \[c  1 - \frac{H(K|C)}{H(K)}\] where is the conditional entropy of the classes given the cluster assignments and is given by: \[H(C|K)  - \sum_{c1}^{|C|} \sum_{k1}^{|K|} \frac{n_{c,k}}{n} \cdot \log\left(\frac{n_{c,k}}{n_k}\right)\] and is the entropy of the classes and is given by: \[H(C)  - \sum_{c1}^{|C|} \frac{n_c}{n} \cdot \log\left(\frac{n_c}{n}\right)\] with the total number of samples, and the number of samples respectively belonging to class and cluster , and finally the number of samples from class assigned to cluster . The conditional entropy of clusters given class and the entropy of clusters are defined in a symmetric manner. Rosenberg and Hirschberg further define V-measure as the harmonic mean of homogeneity and completeness : \[v  2 \cdot \frac{h \cdot c}{h + c}\] References V-Measure: A conditional entropy-based external cluster evaluation measure Andrew Rosenberg and Julia Hirschberg, 2007 B2011 Identication and Characterization of Events in Social Media , Hila Becker, PhD Thesis. 2.3.10.4. Fowlkes-Mallows scores  The Fowlkes-Mallows index ( sklearn.metrics.fowlkes_mallows_score ) can be used when the ground truth class assignments of the samples is known. The Fowlkes-Mallows score FMI is defined as the geometric mean of the pairwise precision and recall: \[\text{FMI}  \frac{\text{TP}}{\sqrt{(\text{TP} + \text{FP}) (\text{TP} + \text{FN})}}\] Where is the number of True Positive (i.e. the number of pair of points that belong to the same clusters in both the true labels and the predicted labels), is the number of False Positive (i.e. the number of pair of points that belong to the same clusters in the true labels and not in the predicted labels) and is the number of False Negative (i.e the number of pair of points that belongs in the same clusters in the predicted labels and not in the true labels). The score ranges from 0 to 1. A high value indicates a good similarity between two clusters. One can permute 0 and 1 in the predicted labels, rename 2 to 3 and get the same score: Perfect labeling is scored 1.0: Bad (e.g. independent labelings) have zero scores: 2.3.10.4.1. Advantages  Random (uniform) label assignments have a FMI score close to 0.0 for any value of and (which is not the case for raw Mutual Information or the V-measure for instance). Upper-bounded at 1 : Values close to zero indicate two label assignments that are largely independent, while values close to one indicate significant agreement. Further, values of exactly 0 indicate purely independent label assignments and a FMI of exactly 1 indicates that the two label assignments are equal (with or without permutation). No assumption is made on the cluster structure : can be used to compare clustering algorithms such as k-means which assumes isotropic blob shapes with results of spectral clustering algorithms which can find cluster with “folded” shapes. 2.3.10.4.2. Drawbacks  Contrary to inertia, FMI-based measures require the knowledge of the ground truth classes while almost never available in practice or requires manual assignment by human annotators (as in the supervised learning setting). References E. B. Fowkles and C. L. Mallows, 1983. “A method for comparing two hierarchical clusterings”. Journal of the American Statistical Association. http://wildfire.stat.ucla.edu/pdflibrary/fowlkes.pdf Wikipedia entry for the Fowlkes-Mallows Index 2.3.10.5. Silhouette Coefficient  If the ground truth labels are not known, evaluation must be performed using the model itself. The Silhouette Coefficient ( sklearn.metrics.silhouette_score ) is an example of such an evaluation, where a higher Silhouette Coefficient score relates to a model with better defined clusters. The Silhouette Coefficient is defined for each sample and is composed of two scores: a : The mean distance between a sample and all other points in the same class. b : The mean distance between a sample and all other points in the next nearest cluster . The Silhouette Coefficient s for a single sample is then given as: \[s  \frac{b - a}{max(a, b)}\] The Silhouette Coefficient for a set of samples is given as the mean of the Silhouette Coefficient for each sample. In normal usage, the Silhouette Coefficient is applied to the results of a cluster analysis. References Peter J. Rousseeuw (1987). “Silhouettes: a Graphical Aid to the Interpretation and Validation of Cluster Analysis”. Computational and Applied Mathematics 20: 53–65. doi:10.1016/0377-0427(87)90125-7 . 2.3.10.5.1. Advantages  The score is bounded between -1 for incorrect clustering and +1 for highly dense clustering. Scores around zero indicate overlapping clusters. The score is higher when clusters are dense and well separated, which relates to a standard concept of a cluster. 2.3.10.5.2. Drawbacks  The Silhouette Coefficient is generally higher for convex clusters than other concepts of clusters, such as density based clusters like those obtained through DBSCAN. Examples: Selecting the number of clusters with silhouette analysis on KMeans clustering : In this example the silhouette analysis is used to choose an optimal value for n_clusters. 2.3.10.6. Calinski-Harabasz Index  If the ground truth labels are not known, the Calinski-Harabasz index ( sklearn.metrics.calinski_harabasz_score ) - also known as the Variance Ratio Criterion - can be used to evaluate the model, where a higher Calinski-Harabasz score relates to a model with better defined clusters. The index is the ratio of the sum of between-clusters dispersion and of inter-cluster dispersion for all clusters (where dispersion is defined as the sum of distances squared): In normal usage, the Calinski-Harabasz index is applied to the results of a cluster analysis: 2.3.10.6.1. Advantages  The score is higher when clusters are dense and well separated, which relates to a standard concept of a cluster. The score is fast to compute. 2.3.10.6.2. Drawbacks  The Calinski-Harabasz index is generally higher for convex clusters than other concepts of clusters, such as density based clusters like those obtained through DBSCAN. 2.3.10.6.3. Mathematical formulation  For a set of data of size which has been clustered into clusters, the Calinski-Harabasz score is defined as the ratio of the between-clusters dispersion mean and the within-cluster dispersion: \[s  \frac{\mathrm{tr}(B_k)}{\mathrm{tr}(W_k)} \times \frac{n_E - k}{k - 1}\] where is trace of the between group dispersion matrix and is the trace of the within-cluster dispersion matrix defined by: \[W_k  \sum_{q1}^k \sum_{x \in C_q} (x - c_q) (x - c_q)^T\] \[B_k  \sum_{q1}^k n_q (c_q - c_E) (c_q - c_E)^T\] with the set of points in cluster , the center of cluster , the center of , and the number of points in cluster . References Caliński, T., & Harabasz, J. (1974). “A Dendrite Method for Cluster Analysis” . Communications in Statistics-theory and Methods 3: 1-27. doi:10.1080/03610927408827101 . 2.3.10.7. Davies-Bouldin Index  If the ground truth labels are not known, the Davies-Bouldin index ( sklearn.metrics.davies_bouldin_score ) can be used to evaluate the model, where a lower Davies-Bouldin index relates to a model with better separation between the clusters. This index signifies the average ‘similarity’ between clusters, where the similarity is a measure that compares the distance between clusters with the size of the clusters themselves. Zero is the lowest possible score. Values closer to zero indicate a better partition. In normal usage, the Davies-Bouldin index is applied to the results of a cluster analysis as follows: 2.3.10.7.1. Advantages  The computation of Davies-Bouldin is simpler than that of Silhouette scores. The index is computed only quantities and features inherent to the dataset. 2.3.10.7.2. Drawbacks  The Davies-Boulding index is generally higher for convex clusters than other concepts of clusters, such as density based clusters like those obtained from DBSCAN. The usage of centroid distance limits the distance metric to Euclidean space. 2.3.10.7.3. Mathematical formulation  The index is defined as the average similarity between each cluster for and its most similar one . In the context of this index, similarity is defined as a measure that trades off: , the average distance between each point of cluster and the centroid of that cluster – also know as cluster diameter. , the distance between cluster centroids and . A simple choice to construct so that it is nonnegative and symmetric is: \[R_{ij}  \frac{s_i + s_j}{d_{ij}}\] Then the Davies-Bouldin index is defined as: \[DB  \frac{1}{k} \sum_{i1}^k \max_{i \neq j} R_{ij}\] References Davies, David L.; Bouldin, Donald W. (1979). “A Cluster Separation Measure” IEEE Transactions on Pattern Analysis and Machine Intelligence. PAMI-1 (2): 224-227. doi:10.1109/TPAMI.1979.4766909 . Halkidi, Maria; Batistakis, Yannis; Vazirgiannis, Michalis (2001). “On Clustering Validation Techniques” Journal of Intelligent Information Systems, 17(2-3), 107-145. doi:10.1023/A:1012801612483 . Wikipedia entry for Davies-Bouldin index . 2.3.10.8. Contingency Matrix  Contingency matrix ( sklearn.metrics.cluster.contingency_matrix ) reports the intersection cardinality for every true/predicted cluster pair. The contingency matrix provides sufficient statistics for all clustering metrics where the samples are independent and identically distributed and one doesn’t need to account for some instances not being clustered. Here is an example: The first row of output array indicates that there are three samples whose true cluster is “a”. Of them, two are in predicted cluster 0, one is in 1, and none is in 2. And the second row indicates that there are three samples whose true cluster is “b”. Of them, none is in predicted cluster 0, one is in 1 and two are in 2. A confusion matrix for classification is a square contingency matrix where the order of rows and columns correspond to a list of classes. 2.3.10.8.1. Advantages  Allows to examine the spread of each true cluster across predicted clusters and vice versa. The contingency table calculated is typically utilized in the calculation of a similarity statistic (like the others listed in this document) between the two clusterings. 2.3.10.8.2. Drawbacks  Contingency matrix is easy to interpret for a small number of clusters, but becomes very hard to interpret for a large number of clusters. It doesn’t give a single metric to use as an objective for clustering optimisation. References Wikipedia entry for contingency matrix 