sklearn_1_4_support_vector_machines
1.4. Support Vector Machines
modules/svm.html
 1.4.6. Kernel functions  The kernel function can be any of the following: linear: . polynomial: , where is specified by parameter , by . rbf: , where is specified by parameter , must be greater than 0. sigmoid , where is specified by . Different kernels are specified by the parameter: 1.4.6.1. Parameters of the RBF Kernel  When training an SVM with the Radial Basis Function (RBF) kernel, two parameters must be considered: and . The parameter , common to all SVM kernels, trades off misclassification of training examples against simplicity of the decision surface. A low makes the decision surface smooth, while a high aims at classifying all training examples correctly. defines how much influence a single training example has. The larger is, the closer other examples must be to be affected. Proper choice of and is critical to the SVMâ€™s performance. One is advised to use sklearn.model_selection.GridSearchCV with and spaced exponentially far apart to choose good values. Examples: RBF SVM parameters Non-linear SVM 1.4.6.2. Custom Kernels  You can define your own kernels by either giving the kernel as a python function or by precomputing the Gram matrix. Classifiers with custom kernels behave the same way as any other classifiers, except that: Field is now empty, only indices of support vectors are stored in A reference (and not a copy) of the first argument in the method is stored for future reference. If that array changes between the use of and you will have unexpected results. 1.4.6.2.1. Using Python functions as kernels  You can use your own defined kernels by passing a function to the parameter. Your kernel must take as arguments two matrices of shape , and return a kernel matrix of shape . The following code defines a linear kernel and creates a classifier instance that will use that kernel: Examples: SVM with custom kernel . 1.4.6.2.2. Using the Gram matrix  You can pass pre-computed kernels by using the option. You should then pass Gram matrix instead of X to the and methods. The kernel values between all training vectors and the test vectors must be provided: 