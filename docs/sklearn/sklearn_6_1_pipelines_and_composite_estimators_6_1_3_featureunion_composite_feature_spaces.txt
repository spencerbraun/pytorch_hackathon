sklearn_6_1_pipelines_and_composite_estimators
6.1. Pipelines and composite estimators
modules/compose.html
 6.1.3. FeatureUnion: composite feature spaces  FeatureUnion combines several transformer objects into a new transformer that combines their output. A FeatureUnion takes a list of transformer objects. During fitting, each of these is fit to the data independently. The transformers are applied in parallel, and the feature matrices they output are concatenated side-by-side into a larger matrix. When you want to apply different transformations to each field of the data, see the related class sklearn.compose.ColumnTransformer (see user guide ). FeatureUnion serves the same purposes as Pipeline - convenience and joint parameter estimation and validation. FeatureUnion and Pipeline can be combined to create complex models. (A FeatureUnion has no way of checking whether two transformers might produce identical features. It only produces a union when the feature sets are disjoint, and making sure they are the callerâ€™s responsibility.) 6.1.3.1. Usage  A FeatureUnion is built using a list of pairs, where the is the name you want to give to a given transformation (an arbitrary string; it only serves as an identifier) and is an estimator object: Like pipelines, feature unions have a shorthand constructor called make_union that does not require explicit naming of the components. Like , individual steps may be replaced using , and ignored by setting to : Examples: Concatenating multiple feature extraction methods 