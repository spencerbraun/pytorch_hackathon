scipy_sparse_eigenvalue_problems_with_arpack
Sparse eigenvalue problems with ARPACK
arpack.html
 Use of LinearOperator  We consider now the case where youâ€™d like to avoid creating a dense matrix and use scipy.sparse.linalg.LinearOperator instead. Our first linear operator applies element-wise multiplication between the input vector and a vector provided by the user to the operator itself. This operator mimics a diagonal matrix with the elements of along the main diagonal and it has the main benefit that the forward and adjoint operations are simple element-wise multiplications other than matrix-vector multiplications. For a diagonal matrix, we expect the eigenvalues to be equal to the elements along the main diagonal, in this case . The eigenvalues and eigenvectors obtained with are compared to those obtained by using when applied to the dense matrix: In this case, we have created a quick and easy operator. The external library PyLops provides similar capabilities in the Diagonal operator, as well as several other operators. Finally, we consider a linear operator that mimics the application of a first-derivative stencil. In this case, the operator is equivalent to a real nonsymmetric matrix. Once again, we compare the estimated eigenvalues and eigenvectors with those from a dense matrix that applies the same first derivative to an input signal: Note that the eigenvalues of this operator are all imaginary. Moreover, the keyword of scipy.sparse.linalg.eigs produces the eigenvalues with largest absolute imaginary part (both positive and negative). Again, a more advanced implementation of the first-derivative operator is available in the PyLops library under the name of FirstDerivative operator. 