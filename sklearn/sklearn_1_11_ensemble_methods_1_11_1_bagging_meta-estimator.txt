sklearn_1_11_ensemble_methods
1.11. Ensemble methods
modules/ensemble.html
 1.11.1. Bagging meta-estimator  In ensemble algorithms, bagging methods form a class of algorithms which build several instances of a black-box estimator on random subsets of the original training set and then aggregate their individual predictions to form a final prediction. These methods are used as a way to reduce the variance of a base estimator (e.g., a decision tree), by introducing randomization into its construction procedure and then making an ensemble out of it. In many cases, bagging methods constitute a very simple way to improve with respect to a single model, without making it necessary to adapt the underlying base algorithm. As they provide a way to reduce overfitting, bagging methods work best with strong and complex models (e.g., fully developed decision trees), in contrast with boosting methods which usually work best with weak models (e.g., shallow decision trees). Bagging methods come in many flavours but mostly differ from each other by the way they draw random subsets of the training set: When random subsets of the dataset are drawn as random subsets of the samples, then this algorithm is known as Pasting [B1999] . When samples are drawn with replacement, then the method is known as Bagging [B1996] . When random subsets of the dataset are drawn as random subsets of the features, then the method is known as Random Subspaces [H1998] . Finally, when base estimators are built on subsets of both samples and features, then the method is known as Random Patches [LG2012] . In scikit-learn, bagging methods are offered as a unified BaggingClassifier meta-estimator (resp. BaggingRegressor ), taking as input a user-specified base estimator along with parameters specifying the strategy to draw random subsets. In particular, and control the size of the subsets (in terms of samples and features), while and control whether samples and features are drawn with or without replacement. When using a subset of the available samples the generalization accuracy can be estimated with the out-of-bag samples by setting . As an example, the snippet below illustrates how to instantiate a bagging ensemble of KNeighborsClassifier base estimators, each built on random subsets of 50% of the samples and 50% of the features. Examples: Single estimator versus bagging: bias-variance decomposition References B1999 L. Breiman, “Pasting small votes for classification in large databases and on-line”, Machine Learning, 36(1), 85-103, 1999. B1996 L. Breiman, “Bagging predictors”, Machine Learning, 24(2), 123-140, 1996. H1998 T. Ho, “The random subspace method for constructing decision forests”, Pattern Analysis and Machine Intelligence, 20(8), 832-844, 1998. LG2012 G. Louppe and P. Geurts, “Ensembles on Random Patches”, Machine Learning and Knowledge Discovery in Databases, 346-361, 2012. 